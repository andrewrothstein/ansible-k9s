---
- name: Install unarchivedeps
  ansible.builtin.include_role:
    name: andrewrothstein.unarchivedeps
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Check for {{ k9s_install_dir }}
  become: true
  ansible.builtin.stat:
    path: '{{ k9s_install_dir }}'
  changed_when: false
  register: k9s_binary
- when: not k9s_binary.stat.exists
  block:
    - name: Download {{ k9s_url }}...
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ k9s_url }}'
        dest: '{{ k9s_tmp_archive }}'
        checksum: '{{ k9s_checksum }}'
        mode: '644'
    - name: Mkdir {{ k9s_install_dir }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ k9s_install_dir }}'
        state: directory
        mode: '755'
    - name: Unarchive {{ k9s_tmp_archive }}
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ k9s_tmp_archive }}'
        dest: '{{ k9s_install_dir }}'
        creates: '{{ k9s_installed_exe }}'
  always:
    - name: Rm {{ k9s_tmp_archive }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ k9s_tmp_archive }}'
        state: absent
- name: Linking {{ k9s_installed_link }} to {{ k9s_installed_exe }}
  become: true
  become_user: root
  ansible.builtin.file:
    src: '{{ k9s_installed_exe }}'
    dest: '{{ k9s_installed_link }}'
    state: link
